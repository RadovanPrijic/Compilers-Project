//import section

import java_cup.runtime.*;
import java.io.*;

parser code {:
   
   public static void main( String[] args ) {
      try {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new Lexer( file );
		   Parser parser = new Parser( scanner );
		   parser.debug_parse();
	  }
	  catch( Exception e ) {
		   System.out.println(e);
	  }
   }

:};

//Terminal symbols
terminal MAIN, INTEGER, REAL, CHAR, READ, WRITE, FOR, IN, PLUS, SUB, MUL, DIV;
terminal ID, CONST, SEMI, COMMA, ASSIGN, LEFTPAR, RIGHTPAR, LEFTBOX, RIGHTBOX, LEFTBRACE, RIGHTBRACE;

//Nonterminal symbols
non terminal Program, Block, VarSection, StatementList, VarDecl, Type, NameList, Name, DimList, Dimenssion;
non terminal Statement, Variable, Expression, VarList, ExpressionList, Term, Factor, IndexList, Index;

//Grammar

Program ::= MAIN LEFTPAR RIGHTPAR Block 
            {:
               System.out.println( "Redukcija po smeni 1." );
            :};

Block ::= LEFTBRACE VarSection StatementList RIGHTBRACE
             {:
                System.out.println( "Redukcija po smeni 2." );
             :};

VarSection ::= VarSection VarDecl 
            {:
               System.out.println( "Redukcija po smeni 3." );
            :}
          | VarDecl
            {:
               System.out.println( "Redukcija po smeni 4." );
            :}
          ;

VarDecl ::= Type NameList SEMI
                {:
                   System.out.println( "Redukcija po smeni 5." );
                :};

NameList ::= NameList COMMA Name
             {:
                System.out.println( "Redukcija po smeni 6." );
             :} 
           | Name
             {:
                System.out.println( "Redukcija po smeni 7." );
             :}
           ;

Name ::= ID DimList 
        {:
           System.out.println( "Redukcija po smeni 8." );
        :};

DimList ::= DimList Dimenssion
           {:
              System.out.println( "Redukcija po smeni 9." );
           :}
         | 
           {:
              System.out.println( "Redukcija po smeni 10." );
           :}
         ;

Dimenssion ::= LEFTBOX CONST RIGHTBOX 
        {:
           System.out.println( "Redukcija po smeni 11." );
        :};

Type ::= INTEGER
            {:
               System.out.println( "Redukcija po smeni 12." );
            :}
          | REAL 
            {:
               System.out.println( "Redukcija po smeni 13." );
            :}
          | CHAR
            {:
               System.out.println( "Redukcija po smeni 14." );
            :}
          ;

StatementList ::= StatementList Statement
            {:
               System.out.println( "Redukcija po smeni 15." );
            :}
          | Statement
            {:
               System.out.println( "Redukcija po smeni 16." );
            :}
          ;

Statement ::= FOR LEFTPAR Type ID IN ID RIGHTPAR Statement 
            {:
               System.out.println( "Redukcija po smeni 17." );
            :}
          | Variable ASSIGN Expression SEMI
            {:
               System.out.println( "Redukcija po smeni 18." );
            :}
          | READ LEFTPAR VarList RIGHTPAR SEMI
            {:
               System.out.println( "Redukcija po smeni 19." );
            :}
          | WRITE LEFTPAR ExpressionList RIGHTPAR SEMI
            {:
               System.out.println( "Redukcija po smeni 20." );
            :}
          | Block
            {:
               System.out.println( "Redukcija po smeni 21." );
            :}
          ;

Expression ::= Expression PLUS Term
            {:
               System.out.println( "Redukcija po smeni 22." );
            :}
          | Expression SUB Term
            {:
               System.out.println( "Redukcija po smeni 23." );
            :}
          | Term
            {:
               System.out.println( "Redukcija po smeni 24." );
            :}
          ;

Term ::= Term MUL Factor
            {:
               System.out.println( "Redukcija po smeni 25." );
            :}
          | Term DIV Factor
            {:
               System.out.println( "Redukcija po smeni 26." );
            :}
          | Factor
            {:
               System.out.println( "Redukcija po smeni 27." );
            :}
          ;

Factor ::= Variable
            {:
               System.out.println( "Redukcija po smeni 28." );
            :}
          | CONST
            {:
               System.out.println( "Redukcija po smeni 29." );
            :}
          | LEFTPAR Expression RIGHTPAR
            {:
               System.out.println( "Redukcija po smeni 30." );
            :}
          ;

Variable ::= ID IndexList
         {:
            System.out.println( "Redukcija po smeni 31." );
         :};

IndexList ::= IndexList Index
            {:
               System.out.println( "Redukcija po smeni 32." );
            :}
          | 
            {:
               System.out.println( "Redukcija po smeni 33." );
            :}
          ;

Index ::= LEFTBOX Expression RIGHTBOX
          {:
             System.out.println( "Redukcija po smeni 34." );
          :};

VarList ::= VarList COMMA Variable
          {:
             System.out.println( "Redukcija po smeni 35." );
          :}
        | Variable
          {:
             System.out.println( "Redukcija po smeni 36." );
          :}
        ;

ExpressionList ::= ExpressionList COMMA Expression
           {:
              System.out.println( "Redukcija po smeni 37." );
           :}
         | Expression
           {:
              System.out.println( "Redukcija po smeni 38." );
           :}
         ;

	





